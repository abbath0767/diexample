// Generated by Dagger (https://dagger.dev).
package com.example.diexample.feature_2.ui;

import com.example.diexample.analytics.Adjust;
import com.example.diexample.network.CoreApi;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentSecondFeature_MembersInjector implements MembersInjector<FragmentSecondFeature> {
  private final Provider<CoreApi> coreApiProvider;

  private final Provider<Adjust> adjustProvider;

  public FragmentSecondFeature_MembersInjector(Provider<CoreApi> coreApiProvider,
      Provider<Adjust> adjustProvider) {
    this.coreApiProvider = coreApiProvider;
    this.adjustProvider = adjustProvider;
  }

  public static MembersInjector<FragmentSecondFeature> create(Provider<CoreApi> coreApiProvider,
      Provider<Adjust> adjustProvider) {
    return new FragmentSecondFeature_MembersInjector(coreApiProvider, adjustProvider);}

  @Override
  public void injectMembers(FragmentSecondFeature instance) {
    injectCoreApi(instance, coreApiProvider.get());
    injectAdjust(instance, adjustProvider.get());
  }

  @InjectedFieldSignature("com.example.diexample.feature_2.ui.FragmentSecondFeature.coreApi")
  public static void injectCoreApi(FragmentSecondFeature instance, CoreApi coreApi) {
    instance.coreApi = coreApi;
  }

  @InjectedFieldSignature("com.example.diexample.feature_2.ui.FragmentSecondFeature.adjust")
  public static void injectAdjust(FragmentSecondFeature instance, Adjust adjust) {
    instance.adjust = adjust;
  }
}
